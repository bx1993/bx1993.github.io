{"meta":{"title":"XYZ的博客","subtitle":"天将降大任于是人","description":"","author":"XYZ","url":"http://yoursite.com","root":"/"},"pages":[{"title":"分类","date":"2019-12-26T02:48:33.000Z","updated":"2019-12-26T02:49:27.121Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"利用google map API和python脚本获取超高精度地形数据","slug":"利用google-map-API和python脚本获取超高精度地形数据","date":"2019-12-26T07:13:02.000Z","updated":"2019-12-26T07:26:09.706Z","comments":true,"path":"2019/12/26/利用google-map-API和python脚本获取超高精度地形数据/","link":"","permalink":"http://yoursite.com/2019/12/26/%E5%88%A9%E7%94%A8google-map-API%E5%92%8Cpython%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E8%B6%85%E9%AB%98%E7%B2%BE%E5%BA%A6%E5%9C%B0%E5%BD%A2%E6%95%B0%E6%8D%AE/","excerpt":"","text":"这学期的设计课涉及到了高速公路，铁路等一系列交通基础设施。我的设计范围内既有架起的高速，又有下陷的高速，铁路也在不同的标高上，外加自然的地形起伏，整个基地的高度变化十分丰富。所以需要很高精度（精确到米级的）的地形数据来进行一系列建模和分析。 先是尝试在“地理空间数据云”这个网站寻找。这个网站提供GDEMEDM 30M的分辨率的数字高程数据，按照经纬度条带号来检索。这个数据对于我而言有两大短处：（1）数据精度不够。在详细设计中2m的高差已经很了不得了，这个数据的精度完全达不到这个要求（2）按照经纬度条带号下载的数据范围极大。在如此巨大的范围中极难准确定位自己的基地。 联想到谷歌地图的移动端有地形的显示所以想到谷歌地图可能提供了比较详细的高程数据。 上网一搜，果不其然，谷歌地图提供了Google Maps Elevation API，可以非常方便地获取指定范围内的地形数据。 下面简单说一下怎么做。 第一步你需要一个gmail,也就是谷歌的账号（这一步就会难倒国内大部分人==） 第二步：登陆https://console.cloud.google.com/appengine，利用自己的账号去创建appid,每个谷歌账号可以创建多个appid,有了这些appid之后，你可以为每个id申请不同的api密钥。或者直接登陆：https://developers.google.com/maps/documentation/elevation/intro?hl=zh-cn点击“获取密钥”每个密钥每天2500次免费请求，每次请求最多512个位置。每个人拥有的密钥上限不确定（多年前我为了用gogent翻墙，申请了12个appid，所以应该可以有12个密钥）。 第三步：向谷歌发送请求，谷歌返回高程值。引用一个谷歌官方开发文档的说明： 下例请求以 JSON 格式返回科罗拉多州“里高城”丹佛的海拔高度：https://maps.googleapis.com/maps/api/elevation/json/locations=39.7391536,-104.9847034&amp;key=YOUR_API_KEY 这个api要求的参数不多，简单点来说就你你给他一个标准的经纬度，他就以json的格式给你返回高程。 不会写代码？没关系，网上早就有大神帮我们写好了！大家复制—粘贴—运行即可：） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263import googlemapsimport numpy as npdef request_elevation(xmin, xmax, xinc, ymin, ymax, yinc, maxnum&#x3D;512): xlist &#x3D; np.arange(xmin, xmax, xinc) ylist &#x3D; np.arange(ymin, ymax, yinc) points &#x3D; [(y, x) for y in ylist for x in xlist] requestnum &#x3D; int(np.floor(len(points) &#x2F; maxnum) + 1) npoints &#x3D; np.array_split(points, requestnum) if requestnum &gt; 2500: print(&quot;Error: Request number exceed! Change grid or region.&quot;) return [gmaps.elevation(locations&#x3D;loc.tolist()) for loc in npoints]xmin, xmax, xinc &#x3D; 7.720972, 7.740003, 0.0001ymin, ymax, yinc &#x3D; 48.579339, 48.591174, 0.0001gmaps &#x3D; googlemaps.Client(key&#x3D;&#39;AIzaSyC37qhvBNXp4Y3u-hBrITP-kooJx_Unidc&#39;)# Generate all locationselevations &#x3D; request_elevation(xmin, xmax, xinc, ymin, ymax, yinc)# output data with format &#96;longitude latitude elevation resolution&#96;with open(&quot;Elevations.dat&quot;, &quot;w&quot;) as f: for loclist in elevations: for subloc in loclist: outputstr &#x3D; &quot;&#123;:.5f&#125; &#123;:.5f&#125; &#123;:.5f&#125; &#123;:.5f&#125;\\n&quot;.format( subloc[&#39;location&#39;][&#39;lng&#39;], subloc[&#39;location&#39;][&#39;lat&#39;], subloc[&#39;elevation&#39;], subloc[&#39;resolution&#39;]) f.writelines(outputstr) 以上代码来自“GMT中文社区”，作者SeisPider。 在我看来，这个代码的机智之处在于他在一次请求里塞了512个位置。这样充分利用2500次请求的话，就有128万个位置。这么多位置可以构成一个相当可观的面积。需要注意的是，谷歌地图接受的是经纬度坐标，而我们做设计的有的时候更需精确的距离。比如这个地方我需要每隔5米选一个点来测量高程，这个时候就会涉及到一个经纬度和米之间的换算，简单来说：经纬度偏差0.00001度相当于偏差1米（代码里的函数里有参数，可以修改）运行上述代码成功的话会产生一个.dat的文件，获得的数据如图：第一列经度，第二列纬度，第三列获得的高程，第四列点与点之间的距离。我们看一下第三列的数据精度，我只能说：鹅妹子嘤！！！ 将上述数据导入GIS可视化（红色代表高的地方，绿色代表低的地方，蓝色的线是高架，灰色的线是铁路） 低于地面的高速公路和高于地面的高速公路和自然的坡地的地形变化，一目了然！ 有了这些精度的数据，我就能对这些场地做更加复杂的竖向设计，而不是把他当成一个平地来设计了。 收集基地的数据只是设计过程中必要的一小步，真正难的地方还是我们如何设想这个场地的未来以及如何真正地做一个设计：）最后说一个题外话：） 去年暑假有邢台市有一场大洪水，非常可怕，很多村民在睡梦之中被夺去了生命。这个事情发生后，关于洪水的起因竟然争执不下。网上各路大神各种分析，说是上游水库泄洪，有人说是附近某条河的锅；当时我就想找那个地区的地形数据做个洪水的淹没分析，结果国内提供的数据精度真的差的根本不能分析。我想如果国内能没有这堵墙或者提高一些数据质量，受益的可不仅仅是我们设计领域的人哦。。。 （文中提到代码的出处：http://gmt-china.org/blog/google-maps-elevation-api）","categories":[{"name":"技术","slug":"技术","permalink":"http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"}],"tags":[]},{"title":"创站语","slug":"创站语","date":"2019-12-25T02:31:06.000Z","updated":"2019-12-26T06:57:37.777Z","comments":true,"path":"2019/12/25/创站语/","link":"","permalink":"http://yoursite.com/2019/12/25/%E5%88%9B%E7%AB%99%E8%AF%AD/","excerpt":"","text":"最近工作有点闲，翻了翻几位技术大牛学长的个人网站，觉得在茫茫互联网的大海有个记载自己人生历程的小角落感觉挺好。且个人网站相对于微信公众号收到的监管较弱，可操作性更强，所以就用了一个下午的时间翻阅各种博客，初步搭建了个人网站的雏形。接下来的一段时间，我会努力将个人网站美化，将以前写的文章搬运到个人网站上，希望能持续记录自己的生活和感想吧。等以后稳定下来，就买个自己的域名哈哈！","categories":[{"name":"感想","slug":"感想","permalink":"http://yoursite.com/categories/%E6%84%9F%E6%83%B3/"}],"tags":[]},{"title":"2017年寒假的FLAG","slug":"2017年寒假的FLAG","date":"2017-01-23T02:52:37.000Z","updated":"2019-12-26T06:14:21.251Z","comments":true,"path":"2017/01/23/2017年寒假的FLAG/","link":"","permalink":"http://yoursite.com/2017/01/23/2017%E5%B9%B4%E5%AF%92%E5%81%87%E7%9A%84FLAG/","excerpt":"","text":"上个学期，是抗争的一学期。。。 勤奋一直在试图反抗懒惰，而大多数时候的情况是：勤奋被按在地上摩擦。。。 勤奋觉得：是时候反击了！ 反击的开始是：立FLAG！ ##FLAG 以下是我在2017年寒假（1.23—2.24）想要完成的事好好陪家人，特别是爷爷奶奶去菜市场若干次，学会做一至两道菜读完一本和专业无关的书，目前目标《红太阳是如何升起的》和《众病之王-癌症传》读完从学校带回来的《多中心大都市》，《统计学—从数据到结论》初步学会写Arcgis的python脚本，具体完成任务：按照指定距离对大量线要素进行分割继续完善python技能，，对着《集体智慧编程》敲敲代码，长期目标是建立一个个人网站每天坚持锻炼一段时间开始补寒假开的线性代数的坑勇敢地看几集机器学习的公开课规律作息，不要乱熬夜看看架子鼓视频，每天用哑鼓练习一段时间 FLAG已立完，一个月后我会再开一帖，总结以下该FLAG的战况。","categories":[{"name":"感想","slug":"感想","permalink":"http://yoursite.com/categories/%E6%84%9F%E6%83%B3/"}],"tags":[]},{"title":"写给摇滚的情书","slug":"写给摇滚的情书","date":"2016-12-04T01:43:20.000Z","updated":"2019-12-26T06:14:44.539Z","comments":true,"path":"2016/12/04/写给摇滚的情书/","link":"","permalink":"http://yoursite.com/2016/12/04/%E5%86%99%E7%BB%99%E6%91%87%E6%BB%9A%E7%9A%84%E6%83%85%E4%B9%A6/","excerpt":"","text":"摇滚乐，或者更准确地说是摇滚乐里的架子鼓是我目前唯一确定的自己特别喜欢的东西。 那种一听到就会上头，就会颤栗，就会情不自禁地扭动身体的东西。 我记得是高二地的，我有了自己的手机，那个时候听到孙楠的《拯救》的时候，我就被歌里面的鼓点深深地吸引了。一听到歌，关注点都在鼓点上，连走路都踩着节拍。那个时候我就知道自己喜欢架子鼓了。 高三考完试，暑假的时候，我第一次听到了枪花的歌，我记得我在看他们的《Don’t cry》的MV的时候，真的感觉整个人会跟着主唱的动作和旋律飞起来一般。我跟我妈说自己想利用暑假去学架子鼓，妈妈也很支持，但无奈的是，当时我们县唯一的一个架子鼓老师竟然因为我年龄太大而不愿意收我当学生。当时觉得也没啥，没感觉喜欢到非学不可的地步，也就作罢了。 上了大学，忙的一逼。曾经去学校乐团的架子鼓排练房看过。后来又由于生活费不够和时间太紧而作罢。 后来失恋，感觉那段时间是真正把摇滚乐听进去了的阶段。快乐的时候一般是听不进去摇滚乐的，觉得太吵太烦，只有你感到压抑，感到痛苦，感到有股力量要爆发的时候才能感受到摇滚乐里那股躁动的能量。那段时间我大量地听摇滚乐，英国的流氓oasis,coldplay,muse,到吊的一逼的Pink floyd,到蝎子到空中铁匠，什么都听。谢谢摇滚，给我那段时间找到了情绪的出口。但听是听爽了，却忘记了自己深爱架子鼓这回事。 到了研究生阶段。事情多的飞起，琐事一堆接着一堆。心中总感觉有股怒火无处逃蹿需要爆发。特别是随着年龄越来越大，做人做事越来越讲究得体，技巧，连追个喜欢的人都要考虑这考虑那！很烦躁，于是想学架子鼓的念头就又突地冒了出来。现在听歌依然会为歌里的鼓点悸动，我无数次幻想着自己在舞台上挥动鼓棒的场景，感觉如果真的有一天我能在一个小小的舞台上忘情地打出一首歌，那真他妈是太爽了！​ 我觉得，既然我这么喜欢架子鼓，那为啥我一直一直都没有为他做点什么呢！为啥我一直一直都没有把这件事付诸实践呢！我觉得如果我去学了，我一定会感到很幸福的吧。这么想，我这么拖延真是个蠢货！ 所以在最后，我要立下一个flag,等我忙过双学位的事，我就去学架子鼓！发个文章作为证据！！","categories":[{"name":"感想","slug":"感想","permalink":"http://yoursite.com/categories/%E6%84%9F%E6%83%B3/"}],"tags":[]}]}